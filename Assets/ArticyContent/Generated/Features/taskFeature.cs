//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Articy.Project_Of_Death;
using Articy.Unity;
using Articy.Unity.Interfaces;
using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;


namespace Articy.Project_Of_Death.Features
{
    
    
    [Serializable()]
    public class taskFeature : IArticyBaseObject, IPropertyProvider
    {
        
        [SerializeField()]
        private Single mtask_loyalty_counter;
        
        [SerializeField()]
        private ArticyValueArticyObject mtask_death_target_first = new ArticyValueArticyObject();
        
        [SerializeField()]
        private ArticyValueArticyObject mtask_death_target_second = new ArticyValueArticyObject();
        
        [SerializeField()]
        private ArticyValueArticyObject mtask_spare_target_first = new ArticyValueArticyObject();
        
        [SerializeField()]
        private task_spare_occupation_selector mtask_spare_occupation_selector = new task_spare_occupation_selector();
        
        [SerializeField()]
        private ArticyValueArticyModelList mtask_daily_profiles = new ArticyValueArticyModelList();
        
        [SerializeField()]
        private task_death_occupation_selector mtask_death_occupation_selector = new task_death_occupation_selector();
        
        [SerializeField()]
        private ArticyValueArticyScriptInstruction mtask_profile_count = new ArticyValueArticyScriptInstruction();
        
        [SerializeField()]
        private String mLocaKey_task_description_top;
        
        [SerializeField()]
        private String mOverwritten_task_description_top = "";
        
        [SerializeField()]
        private Single mtask_death_threshold_younger;
        
        [SerializeField()]
        private Single mtask_death_threshold_older;
        
        [SerializeField()]
        private Single mtask_spare_threshold_younger;
        
        [SerializeField()]
        private Single mtask_spare_threshold_older;
        
        [SerializeField()]
        private String mLocaKey_task_description_bottom;
        
        [SerializeField()]
        private String mOverwritten_task_description_bottom = "";
        
        [SerializeField()]
        private Single mtask_death_occupation_amount;
        
        [SerializeField()]
        private Single mtask_death_threshold_younger_amount;
        
        [SerializeField()]
        private Single mtask_death_threshold_older_amount;
        
        [SerializeField()]
        private Single mtask_spare_occupation_amount;
        
        [SerializeField()]
        private Single mtask_spare_threshold_younger_amount;
        
        [SerializeField()]
        private Single mtask_spare_threshold_older_amount;
        
        [SerializeField()]
        private Single mtask_death_count;
        
        [SerializeField()]
        private Boolean mtask_profile_shuffler = new Boolean();
        
        [SerializeField()]
        private UInt64 mOwnerId;
        
        [SerializeField()]
        private UInt32 mOwnerInstanceId;
        
        /// <summary>
        /// (for following orders fully)
        /// </summary>
        public Single task_loyalty_counter
        {
            get
            {
                return mtask_loyalty_counter;
            }
            set
            {
                var oldValue = mtask_loyalty_counter;
                mtask_loyalty_counter = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "task.task_loyalty_counter", oldValue, mtask_loyalty_counter);
            }
        }
        
        public ArticyObject task_death_target_first
        {
            get
            {
                return mtask_death_target_first.GetValue();
            }
            set
            {
                var oldValue = mtask_death_target_first;
                mtask_death_target_first.SetValue(value);
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "task.task_death_target_first", oldValue.GetValue(), mtask_death_target_first.GetValue());
            }
        }
        
        public ArticyObject task_death_target_second
        {
            get
            {
                return mtask_death_target_second.GetValue();
            }
            set
            {
                var oldValue = mtask_death_target_second;
                mtask_death_target_second.SetValue(value);
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "task.task_death_target_second", oldValue.GetValue(), mtask_death_target_second.GetValue());
            }
        }
        
        public ArticyObject task_spare_target_first
        {
            get
            {
                return mtask_spare_target_first.GetValue();
            }
            set
            {
                var oldValue = mtask_spare_target_first;
                mtask_spare_target_first.SetValue(value);
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "task.task_spare_target_first", oldValue.GetValue(), mtask_spare_target_first.GetValue());
            }
        }
        
        public task_spare_occupation_selector task_spare_occupation_selector
        {
            get
            {
                return mtask_spare_occupation_selector;
            }
            set
            {
                var oldValue = mtask_spare_occupation_selector;
                mtask_spare_occupation_selector = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "task.task_spare_occupation_selector", oldValue, mtask_spare_occupation_selector);
            }
        }
        
        public List<ArticyObject> task_daily_profiles
        {
            get
            {
                return mtask_daily_profiles.GetValue();
            }
            set
            {
                var oldValue = mtask_daily_profiles;
                mtask_daily_profiles.SetValue(value);
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "task.task_daily_profiles", oldValue.GetValue(), mtask_daily_profiles.GetValue());
            }
        }
        
        public task_death_occupation_selector task_death_occupation_selector
        {
            get
            {
                return mtask_death_occupation_selector;
            }
            set
            {
                var oldValue = mtask_death_occupation_selector;
                mtask_death_occupation_selector = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "task.task_death_occupation_selector", oldValue, mtask_death_occupation_selector);
            }
        }
        
        /// <summary>
        /// (the number of profiles that is shown per day)
        /// </summary>
        public ArticyScriptInstruction task_profile_count
        {
            get
            {
                return mtask_profile_count.GetValue();
            }
            set
            {
                var oldValue = mtask_profile_count;
                mtask_profile_count.SetValue(value);
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "task.task_profile_count", oldValue.GetValue(), mtask_profile_count.GetValue());
            }
        }
        
        public String LocaKey_task_description_top
        {
            get
            {
                return mLocaKey_task_description_top;
            }
        }
        
        public String Unresolved_task_description_top
        {
            get
            {
                if ((mOverwritten_task_description_top != ""))
                {
                    return mOverwritten_task_description_top;
                }
                return Articy.Unity.ArticyDatabase.Localization.Localize(mLocaKey_task_description_top);
            }
        }
        
        public String task_description_top
        {
            get
            {
                if ((mOverwritten_task_description_top != ""))
                {
                    return Articy.Unity.ArticyTextExtension.Resolve(this, mOverwritten_task_description_top);
                }
                return Articy.Unity.ArticyTextExtension.Resolve(this, mLocaKey_task_description_top);
            }
            set
            {
                var oldValue = Unresolved_task_description_top;
                mOverwritten_task_description_top = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "task.task_description_top", oldValue, mOverwritten_task_description_top);
            }
        }
        
        public Single task_death_threshold_younger
        {
            get
            {
                return mtask_death_threshold_younger;
            }
            set
            {
                var oldValue = mtask_death_threshold_younger;
                mtask_death_threshold_younger = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "task.task_death_threshold_younger", oldValue, mtask_death_threshold_younger);
            }
        }
        
        public Single task_death_threshold_older
        {
            get
            {
                return mtask_death_threshold_older;
            }
            set
            {
                var oldValue = mtask_death_threshold_older;
                mtask_death_threshold_older = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "task.task_death_threshold_older", oldValue, mtask_death_threshold_older);
            }
        }
        
        public Single task_spare_threshold_younger
        {
            get
            {
                return mtask_spare_threshold_younger;
            }
            set
            {
                var oldValue = mtask_spare_threshold_younger;
                mtask_spare_threshold_younger = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "task.task_spare_threshold_younger", oldValue, mtask_spare_threshold_younger);
            }
        }
        
        public Single task_spare_threshold_older
        {
            get
            {
                return mtask_spare_threshold_older;
            }
            set
            {
                var oldValue = mtask_spare_threshold_older;
                mtask_spare_threshold_older = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "task.task_spare_threshold_older", oldValue, mtask_spare_threshold_older);
            }
        }
        
        public String LocaKey_task_description_bottom
        {
            get
            {
                return mLocaKey_task_description_bottom;
            }
        }
        
        public String Unresolved_task_description_bottom
        {
            get
            {
                if ((mOverwritten_task_description_bottom != ""))
                {
                    return mOverwritten_task_description_bottom;
                }
                return Articy.Unity.ArticyDatabase.Localization.Localize(mLocaKey_task_description_bottom);
            }
        }
        
        public String task_description_bottom
        {
            get
            {
                if ((mOverwritten_task_description_bottom != ""))
                {
                    return Articy.Unity.ArticyTextExtension.Resolve(this, mOverwritten_task_description_bottom);
                }
                return Articy.Unity.ArticyTextExtension.Resolve(this, mLocaKey_task_description_bottom);
            }
            set
            {
                var oldValue = Unresolved_task_description_bottom;
                mOverwritten_task_description_bottom = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "task.task_description_bottom", oldValue, mOverwritten_task_description_bottom);
            }
        }
        
        public Single task_death_occupation_amount
        {
            get
            {
                return mtask_death_occupation_amount;
            }
            set
            {
                var oldValue = mtask_death_occupation_amount;
                mtask_death_occupation_amount = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "task.task_death_occupation_amount", oldValue, mtask_death_occupation_amount);
            }
        }
        
        public Single task_death_threshold_younger_amount
        {
            get
            {
                return mtask_death_threshold_younger_amount;
            }
            set
            {
                var oldValue = mtask_death_threshold_younger_amount;
                mtask_death_threshold_younger_amount = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "task.task_death_threshold_younger_amount", oldValue, mtask_death_threshold_younger_amount);
            }
        }
        
        public Single task_death_threshold_older_amount
        {
            get
            {
                return mtask_death_threshold_older_amount;
            }
            set
            {
                var oldValue = mtask_death_threshold_older_amount;
                mtask_death_threshold_older_amount = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "task.task_death_threshold_older_amount", oldValue, mtask_death_threshold_older_amount);
            }
        }
        
        public Single task_spare_occupation_amount
        {
            get
            {
                return mtask_spare_occupation_amount;
            }
            set
            {
                var oldValue = mtask_spare_occupation_amount;
                mtask_spare_occupation_amount = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "task.task_spare_occupation_amount", oldValue, mtask_spare_occupation_amount);
            }
        }
        
        public Single task_spare_threshold_younger_amount
        {
            get
            {
                return mtask_spare_threshold_younger_amount;
            }
            set
            {
                var oldValue = mtask_spare_threshold_younger_amount;
                mtask_spare_threshold_younger_amount = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "task.task_spare_threshold_younger_amount", oldValue, mtask_spare_threshold_younger_amount);
            }
        }
        
        public Single task_spare_threshold_older_amount
        {
            get
            {
                return mtask_spare_threshold_older_amount;
            }
            set
            {
                var oldValue = mtask_spare_threshold_older_amount;
                mtask_spare_threshold_older_amount = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "task.task_spare_threshold_older_amount", oldValue, mtask_spare_threshold_older_amount);
            }
        }
        
        /// <summary>
        /// (the number of profiles you have to mark per day)
        /// </summary>
        public Single task_death_count
        {
            get
            {
                return mtask_death_count;
            }
            set
            {
                var oldValue = mtask_death_count;
                mtask_death_count = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "task.task_death_count", oldValue, mtask_death_count);
            }
        }
        
        /// <summary>
        /// turn on only in special cases (consult tshiif/Ott), otherwise keep off
        /// </summary>
        public Boolean task_profile_shuffler
        {
            get
            {
                return mtask_profile_shuffler;
            }
            set
            {
                var oldValue = mtask_profile_shuffler;
                mtask_profile_shuffler = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "task.task_profile_shuffler", oldValue, mtask_profile_shuffler);
            }
        }
        
        public UInt64 OwnerId
        {
            get
            {
                return mOwnerId;
            }
            set
            {
                mOwnerId = value;
            }
        }
        
        public UInt32 OwnerInstanceId
        {
            get
            {
                return mOwnerInstanceId;
            }
            set
            {
                mOwnerInstanceId = value;
            }
        }
        
        private void CloneProperties(object aClone, Articy.Unity.ArticyObject aFirstClassParent)
        {
            Articy.Project_Of_Death.Features.taskFeature newClone = ((Articy.Project_Of_Death.Features.taskFeature)(aClone));
            newClone.task_loyalty_counter = task_loyalty_counter;
            if ((mtask_death_target_first != null))
            {
                newClone.mtask_death_target_first = ((ArticyValueArticyObject)(mtask_death_target_first.CloneObject(newClone, aFirstClassParent)));
            }
            if ((mtask_death_target_second != null))
            {
                newClone.mtask_death_target_second = ((ArticyValueArticyObject)(mtask_death_target_second.CloneObject(newClone, aFirstClassParent)));
            }
            if ((mtask_spare_target_first != null))
            {
                newClone.mtask_spare_target_first = ((ArticyValueArticyObject)(mtask_spare_target_first.CloneObject(newClone, aFirstClassParent)));
            }
            newClone.task_spare_occupation_selector = task_spare_occupation_selector;
            mtask_daily_profiles.CustomClone(newClone.mtask_daily_profiles);
            newClone.task_death_occupation_selector = task_death_occupation_selector;
            if ((task_profile_count != null))
            {
                newClone.task_profile_count = ((ArticyScriptInstruction)(task_profile_count.CloneObject(newClone, aFirstClassParent)));
            }
            newClone.mLocaKey_task_description_top = mLocaKey_task_description_top;
            newClone.mOverwritten_task_description_top = mOverwritten_task_description_top;
            newClone.task_death_threshold_younger = task_death_threshold_younger;
            newClone.task_death_threshold_older = task_death_threshold_older;
            newClone.task_spare_threshold_younger = task_spare_threshold_younger;
            newClone.task_spare_threshold_older = task_spare_threshold_older;
            newClone.mLocaKey_task_description_bottom = mLocaKey_task_description_bottom;
            newClone.mOverwritten_task_description_bottom = mOverwritten_task_description_bottom;
            newClone.task_death_occupation_amount = task_death_occupation_amount;
            newClone.task_death_threshold_younger_amount = task_death_threshold_younger_amount;
            newClone.task_death_threshold_older_amount = task_death_threshold_older_amount;
            newClone.task_spare_occupation_amount = task_spare_occupation_amount;
            newClone.task_spare_threshold_younger_amount = task_spare_threshold_younger_amount;
            newClone.task_spare_threshold_older_amount = task_spare_threshold_older_amount;
            newClone.task_death_count = task_death_count;
            newClone.task_profile_shuffler = task_profile_shuffler;
            newClone.OwnerId = OwnerId;
        }
        
        public object CloneObject(object aParent, Articy.Unity.ArticyObject aFirstClassParent)
        {
            Articy.Project_Of_Death.Features.taskFeature clone = new Articy.Project_Of_Death.Features.taskFeature();
            CloneProperties(clone, aFirstClassParent);
            return clone;
        }
        
        public virtual bool IsLocalizedPropertyOverwritten(string aProperty)
        {
            if ((mOverwritten_task_description_top != ""))
            {
                return true;
            }
            if ((mOverwritten_task_description_bottom != ""))
            {
                return true;
            }
            return false;
        }
        
        #region property provider interface
        public void setProp(string aProperty, object aValue)
        {
            if ((aProperty == "task_loyalty_counter"))
            {
                task_loyalty_counter = System.Convert.ToSingle(aValue);
                return;
            }
            if ((aProperty == "task_death_target_first"))
            {
                task_death_target_first = Articy.Unity.Interfaces.BaseScriptFragments.ObjectToModelRep(aValue);
                return;
            }
            if ((aProperty == "task_death_target_second"))
            {
                task_death_target_second = Articy.Unity.Interfaces.BaseScriptFragments.ObjectToModelRep(aValue);
                return;
            }
            if ((aProperty == "task_spare_target_first"))
            {
                task_spare_target_first = Articy.Unity.Interfaces.BaseScriptFragments.ObjectToModelRep(aValue);
                return;
            }
            if ((aProperty == "task_spare_occupation_selector"))
            {
                task_spare_occupation_selector = ((task_spare_occupation_selector)(aValue));
                return;
            }
            if ((aProperty == "task_daily_profiles"))
            {
                task_daily_profiles = ((List<ArticyObject>)(aValue));
                return;
            }
            if ((aProperty == "task_death_occupation_selector"))
            {
                task_death_occupation_selector = ((task_death_occupation_selector)(aValue));
                return;
            }
            if ((aProperty == "task_profile_count"))
            {
                task_profile_count = ((ArticyScriptInstruction)(aValue));
                return;
            }
            if ((aProperty == "task_description_top"))
            {
                task_description_top = System.Convert.ToString(aValue);
                return;
            }
            if ((aProperty == "task_death_threshold_younger"))
            {
                task_death_threshold_younger = System.Convert.ToSingle(aValue);
                return;
            }
            if ((aProperty == "task_death_threshold_older"))
            {
                task_death_threshold_older = System.Convert.ToSingle(aValue);
                return;
            }
            if ((aProperty == "task_spare_threshold_younger"))
            {
                task_spare_threshold_younger = System.Convert.ToSingle(aValue);
                return;
            }
            if ((aProperty == "task_spare_threshold_older"))
            {
                task_spare_threshold_older = System.Convert.ToSingle(aValue);
                return;
            }
            if ((aProperty == "task_description_bottom"))
            {
                task_description_bottom = System.Convert.ToString(aValue);
                return;
            }
            if ((aProperty == "task_death_occupation_amount"))
            {
                task_death_occupation_amount = System.Convert.ToSingle(aValue);
                return;
            }
            if ((aProperty == "task_death_threshold_younger_amount"))
            {
                task_death_threshold_younger_amount = System.Convert.ToSingle(aValue);
                return;
            }
            if ((aProperty == "task_death_threshold_older_amount"))
            {
                task_death_threshold_older_amount = System.Convert.ToSingle(aValue);
                return;
            }
            if ((aProperty == "task_spare_occupation_amount"))
            {
                task_spare_occupation_amount = System.Convert.ToSingle(aValue);
                return;
            }
            if ((aProperty == "task_spare_threshold_younger_amount"))
            {
                task_spare_threshold_younger_amount = System.Convert.ToSingle(aValue);
                return;
            }
            if ((aProperty == "task_spare_threshold_older_amount"))
            {
                task_spare_threshold_older_amount = System.Convert.ToSingle(aValue);
                return;
            }
            if ((aProperty == "task_death_count"))
            {
                task_death_count = System.Convert.ToSingle(aValue);
                return;
            }
            if ((aProperty == "task_profile_shuffler"))
            {
                task_profile_shuffler = System.Convert.ToBoolean(aValue);
                return;
            }
        }
        
        public Articy.Unity.Interfaces.ScriptDataProxy getProp(string aProperty)
        {
            if ((aProperty == "task_loyalty_counter"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(task_loyalty_counter);
            }
            if ((aProperty == "task_death_target_first"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(task_death_target_first);
            }
            if ((aProperty == "task_death_target_second"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(task_death_target_second);
            }
            if ((aProperty == "task_spare_target_first"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(task_spare_target_first);
            }
            if ((aProperty == "task_spare_occupation_selector"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(task_spare_occupation_selector);
            }
            if ((aProperty == "task_daily_profiles"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(task_daily_profiles);
            }
            if ((aProperty == "task_death_occupation_selector"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(task_death_occupation_selector);
            }
            if ((aProperty == "task_profile_count"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(task_profile_count);
            }
            if ((aProperty == "task_description_top"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(task_description_top);
            }
            if ((aProperty == "task_death_threshold_younger"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(task_death_threshold_younger);
            }
            if ((aProperty == "task_death_threshold_older"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(task_death_threshold_older);
            }
            if ((aProperty == "task_spare_threshold_younger"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(task_spare_threshold_younger);
            }
            if ((aProperty == "task_spare_threshold_older"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(task_spare_threshold_older);
            }
            if ((aProperty == "task_description_bottom"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(task_description_bottom);
            }
            if ((aProperty == "task_death_occupation_amount"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(task_death_occupation_amount);
            }
            if ((aProperty == "task_death_threshold_younger_amount"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(task_death_threshold_younger_amount);
            }
            if ((aProperty == "task_death_threshold_older_amount"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(task_death_threshold_older_amount);
            }
            if ((aProperty == "task_spare_occupation_amount"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(task_spare_occupation_amount);
            }
            if ((aProperty == "task_spare_threshold_younger_amount"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(task_spare_threshold_younger_amount);
            }
            if ((aProperty == "task_spare_threshold_older_amount"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(task_spare_threshold_older_amount);
            }
            if ((aProperty == "task_death_count"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(task_death_count);
            }
            if ((aProperty == "task_profile_shuffler"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(task_profile_shuffler);
            }
            return null;
        }
        #endregion
    }
}
